{
  "_args": [
    [
      {
        "raw": "http-errors@^1.7.3",
        "scope": null,
        "escapedName": "http-errors",
        "name": "http-errors",
        "rawSpec": "^1.7.3",
        "spec": ">=1.7.3 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\wardha\\graphql-server-example\\node_modules\\graphql-upload"
    ]
  ],
  "_from": "http-errors@^1.7.3",
  "_hasShrinkwrap": false,
  "_id": "http-errors@1.8.0",
  "_location": "/http-errors",
  "_nodeVersion": "12.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/http-errors_1.8.0_1593409277161_0.44050373643256746"
  },
  "_npmUser": {
    "name": "dougwilson",
    "email": "doug@somethingdoug.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-errors@^1.7.3",
    "scope": null,
    "escapedName": "http-errors",
    "name": "http-errors",
    "rawSpec": "^1.7.3",
    "spec": ">=1.7.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/graphql-upload"
  ],
  "_resolved": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.0.tgz",
  "_shasum": "75d1bbe497e1044f51e4ee9e704a62f28d336507",
  "_shrinkwrap": null,
  "_spec": "http-errors@^1.7.3",
  "_where": "C:\\Users\\wardha\\graphql-server-example\\node_modules\\graphql-upload",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "bugs": {
    "url": "https://github.com/jshttp/http-errors/issues"
  },
  "contributors": [
    {
      "name": "Alan Plum",
      "email": "me@pluma.io"
    },
    {
      "name": "Douglas Christopher Wilson",
      "email": "doug@somethingdoug.com"
    }
  ],
  "dependencies": {
    "depd": "~1.1.2",
    "inherits": "2.0.4",
    "setprototypeof": "1.2.0",
    "statuses": ">= 1.5.0 < 2",
    "toidentifier": "1.0.0"
  },
  "description": "Create HTTP error objects",
  "devDependencies": {
    "eslint": "6.8.0",
    "eslint-config-standard": "14.1.1",
    "eslint-plugin-import": "2.22.0",
    "eslint-plugin-markdown": "1.0.2",
    "eslint-plugin-node": "11.1.0",
    "eslint-plugin-promise": "4.2.1",
    "eslint-plugin-standard": "4.0.1",
    "mocha": "8.0.1",
    "nyc": "15.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-4I8r0C5JDhT5VkvI47QktDW75rNlGVsUf/8hzjCC/wkWI/jdTRmBb9aI7erSG82r1bjKY3F6k28WnsVxB1C73A==",
    "shasum": "75d1bbe497e1044f51e4ee9e704a62f28d336507",
    "tarball": "https://registry.npmjs.org/http-errors/-/http-errors-1.8.0.tgz",
    "fileCount": 5,
    "unpackedSize": 18238,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJe+X79CRA9TVsSAnZWagAAv6wP/RjIshvYJXVRbRP0mb4a\nOvN2mK7/B2nqnD8O2FzgEQ0p1Llb1K9j6TlWdq/cJInioDoR42yQgfyj4FEL\nonR3TgUlE8EjQFhH/ecYF6eaLVNaCTerd3CwdOXAXorzPcCE3g8sx46aB+9p\na/QIvOnNxt9UuDsJDDkpWvVGksr0JwWW0ZEjx0Gw8b4j1GOLXjPzFd4WqOKr\nVXG8KcAs76ZCX4eGIczwRuTpOe8mXITrtqkgyzdM98+PONQsIWEWwjt0tzm0\nMNn9cUfgB0A2UXrHQK0OFuP3TV/Ms3kTvLkvFBkiaxcpuGBlwJXSdK2/j6wA\n88Xqqxx2g70mlCgHfeHOt8GHOnYiCrsCLO5wyhJXkeSipeJM9r/8coZfZEV8\ntGXkLBxAKPInBMzGaIPT9PNsOrTy2JV1Qz2MV1OQU//LokWLLbwxsB54vXVh\nuuQSjjwUYDzA5V52/uBgfPThcM8yC0nYvU7qXV9eb3f2j3f5UJdcVkV/Cr1Z\nHtOqzHPPzY/dDubMfCoufMc3SnFV6fK5IFRmzjlRWLoKy1BZ1bLbmWxhBFeK\n88wD4p0vvSNuPNmXK4ObgxCH6NSUft+4IaHRnpBjPShoV0uyuTktOG1oLxyk\nHgG01wBJcVsUE76idV2fc4VLAMs3l1IiX4kb9+qgEYecsHA5LTuEAHl2aGPr\ngTBl\r\n=OG/P\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.6"
  },
  "files": [
    "index.js",
    "HISTORY.md",
    "LICENSE",
    "README.md"
  ],
  "gitHead": "6e4f655ec3a0cedf2e3ce868daa11b9210d1f103",
  "homepage": "https://github.com/jshttp/http-errors#readme",
  "keywords": [
    "http",
    "error"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dougwilson",
      "email": "doug@somethingdoug.com"
    },
    {
      "name": "egeste",
      "email": "npm@egeste.net"
    },
    {
      "name": "jongleberry",
      "email": "jonathanrichardong@gmail.com"
    }
  ],
  "name": "http-errors",
  "optionalDependencies": {},
  "readme": "# http-errors\n\n[![NPM Version][npm-version-image]][npm-url]\n[![NPM Downloads][npm-downloads-image]][node-url]\n[![Node.js Version][node-image]][node-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nCreate HTTP errors for Express, Koa, Connect, etc. with ease.\n\n## Install\n\nThis is a [Node.js](https://nodejs.org/en/) module available through the\n[npm registry](https://www.npmjs.com/). Installation is done using the\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\n\n```bash\n$ npm install http-errors\n```\n\n## Example\n\n```js\nvar createError = require('http-errors')\nvar express = require('express')\nvar app = express()\n\napp.use(function (req, res, next) {\n  if (!req.user) return next(createError(401, 'Please login to view this page.'))\n  next()\n})\n```\n\n## API\n\nThis is the current API, currently extracted from Koa and subject to change.\n\n### Error Properties\n\n- `expose` - can be used to signal if `message` should be sent to the client,\n  defaulting to `false` when `status` >= 500\n- `headers` - can be an object of header names to values to be sent to the\n  client, defaulting to `undefined`. When defined, the key names should all\n  be lower-cased\n- `message` - the traditional error message, which should be kept short and all\n  single line\n- `status` - the status code of the error, mirroring `statusCode` for general\n  compatibility\n- `statusCode` - the status code of the error, defaulting to `500`\n\n### createError([status], [message], [properties])\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n<!-- eslint-disable no-undef, no-unused-vars -->\n\n```js\nvar err = createError(404, 'This video does not exist!')\n```\n\n- `status: 500` - the status code as a number\n- `message` - the message of the error, defaulting to node's text for that status code.\n- `properties` - custom properties to attach to the object\n\n### createError([status], [error], [properties])\n\nExtend the given `error` object with `createError.HttpError`\nproperties. This will not alter the inheritance of the given\n`error` object, and the modified `error` object is the\nreturn value.\n\n<!-- eslint-disable no-redeclare, no-undef, no-unused-vars -->\n\n```js\nfs.readFile('foo.txt', function (err, buf) {\n  if (err) {\n    if (err.code === 'ENOENT') {\n      var httpError = createError(404, err, { expose: false })\n    } else {\n      var httpError = createError(500, err)\n    }\n  }\n})\n```\n\n- `status` - the status code as a number\n- `error` - the error object to extend\n- `properties` - custom properties to attach to the object\n\n### createError.isHttpError(val)\n\nDetermine if the provided `val` is an `HttpError`. This will return `true`\nif the error inherits from the `HttpError` constructor of this module or\nmatches the \"duck type\" for an error this module creates. All outputs from\nthe `createError` factory will return `true` for this function, including\nif an non-`HttpError` was passed into the factory.\n\n### new createError\\[code || name\\](\\[msg]\\))\n\nCreate a new error object with the given message `msg`.\nThe error object inherits from `createError.HttpError`.\n\n<!-- eslint-disable no-undef, no-unused-vars -->\n\n```js\nvar err = new createError.NotFound()\n```\n\n- `code` - the status code as a number\n- `name` - the name of the error as a \"bumpy case\", i.e. `NotFound` or `InternalServerError`.\n\n#### List of all constructors\n\n|Status Code|Constructor Name             |\n|-----------|-----------------------------|\n|400        |BadRequest                   |\n|401        |Unauthorized                 |\n|402        |PaymentRequired              |\n|403        |Forbidden                    |\n|404        |NotFound                     |\n|405        |MethodNotAllowed             |\n|406        |NotAcceptable                |\n|407        |ProxyAuthenticationRequired  |\n|408        |RequestTimeout               |\n|409        |Conflict                     |\n|410        |Gone                         |\n|411        |LengthRequired               |\n|412        |PreconditionFailed           |\n|413        |PayloadTooLarge              |\n|414        |URITooLong                   |\n|415        |UnsupportedMediaType         |\n|416        |RangeNotSatisfiable          |\n|417        |ExpectationFailed            |\n|418        |ImATeapot                    |\n|421        |MisdirectedRequest           |\n|422        |UnprocessableEntity          |\n|423        |Locked                       |\n|424        |FailedDependency             |\n|425        |UnorderedCollection          |\n|426        |UpgradeRequired              |\n|428        |PreconditionRequired         |\n|429        |TooManyRequests              |\n|431        |RequestHeaderFieldsTooLarge  |\n|451        |UnavailableForLegalReasons   |\n|500        |InternalServerError          |\n|501        |NotImplemented               |\n|502        |BadGateway                   |\n|503        |ServiceUnavailable           |\n|504        |GatewayTimeout               |\n|505        |HTTPVersionNotSupported      |\n|506        |VariantAlsoNegotiates        |\n|507        |InsufficientStorage          |\n|508        |LoopDetected                 |\n|509        |BandwidthLimitExceeded       |\n|510        |NotExtended                  |\n|511        |NetworkAuthenticationRequired|\n\n## License\n\n[MIT](LICENSE)\n\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/http-errors/master\n[coveralls-url]: https://coveralls.io/r/jshttp/http-errors?branch=master\n[node-image]: https://badgen.net/npm/node/http-errors\n[node-url]: https://nodejs.org/en/download\n[npm-downloads-image]: https://badgen.net/npm/dm/http-errors\n[npm-url]: https://npmjs.org/package/http-errors\n[npm-version-image]: https://badgen.net/npm/v/http-errors\n[travis-image]: https://badgen.net/travis/jshttp/http-errors/master\n[travis-url]: https://travis-ci.org/jshttp/http-errors\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jshttp/http-errors.git"
  },
  "scripts": {
    "lint": "eslint --plugin markdown --ext js,md . && node ./scripts/lint-readme-list.js",
    "test": "mocha --reporter spec --bail",
    "test-ci": "nyc --reporter=text npm test",
    "test-cov": "nyc --reporter=html --reporter=text npm test"
  },
  "version": "1.8.0"
}
