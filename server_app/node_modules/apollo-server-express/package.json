{
  "_args": [
    [
      {
        "raw": "apollo-server-express@^2.19.1",
        "scope": null,
        "escapedName": "apollo-server-express",
        "name": "apollo-server-express",
        "rawSpec": "^2.19.1",
        "spec": ">=2.19.1 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\wardha\\graphql-server-example\\server_app\\node_modules\\apollo-server"
    ]
  ],
  "_from": "apollo-server-express@^2.19.1",
  "_hasShrinkwrap": false,
  "_id": "apollo-server-express@2.19.1",
  "_location": "/apollo-server-express",
  "_nodeVersion": "10.23.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/apollo-server-express_2.19.1_1608678440006_0.4122910307703771"
  },
  "_npmUser": {
    "name": "apollo-bot",
    "email": "npm@apollographql.com"
  },
  "_npmVersion": "lerna/3.22.1/node@v10.23.0+x64 (linux)",
  "_phantomChildren": {
    "@types/body-parser": "1.19.0",
    "@types/express-serve-static-core": "4.17.17",
    "@types/qs": "6.9.5",
    "@types/serve-static": "1.13.8"
  },
  "_requested": {
    "raw": "apollo-server-express@^2.19.1",
    "scope": null,
    "escapedName": "apollo-server-express",
    "name": "apollo-server-express",
    "rawSpec": "^2.19.1",
    "spec": ">=2.19.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/apollo-server"
  ],
  "_resolved": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.19.1.tgz",
  "_shasum": "7076ec97d263688563c07ceb5ea55e3fb8437069",
  "_shrinkwrap": null,
  "_spec": "apollo-server-express@^2.19.1",
  "_where": "C:\\Users\\wardha\\graphql-server-example\\server_app\\node_modules\\apollo-server",
  "author": {
    "name": "Apollo",
    "email": "opensource@apollographql.com"
  },
  "bugs": {
    "url": "https://github.com/apollographql/apollo-server/issues"
  },
  "dependencies": {
    "@apollographql/graphql-playground-html": "1.6.26",
    "@types/accepts": "^1.3.5",
    "@types/body-parser": "1.19.0",
    "@types/cors": "2.8.8",
    "@types/express": "4.17.7",
    "@types/express-serve-static-core": "4.17.17",
    "accepts": "^1.3.5",
    "apollo-server-core": "^2.19.1",
    "apollo-server-types": "^0.6.2",
    "body-parser": "^1.18.3",
    "cors": "^2.8.4",
    "express": "^4.17.1",
    "graphql-subscriptions": "^1.0.0",
    "graphql-tools": "^4.0.0",
    "parseurl": "^1.3.2",
    "subscriptions-transport-ws": "^0.9.16",
    "type-is": "^1.6.16"
  },
  "description": "Production-ready Node.js GraphQL server for Express and Connect",
  "devDependencies": {
    "apollo-server-integration-testsuite": "^2.19.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-PJQmPtV3JD7RiV6cP7JcqAwVdUq6hWUtvDIoCOxPoeUWYf79nEF4WiYsPXVF0+meLLWKlL1fuSwEEt1CEHEG5w==",
    "shasum": "7076ec97d263688563c07ceb5ea55e3fb8437069",
    "tarball": "https://registry.npmjs.org/apollo-server-express/-/apollo-server-express-2.19.1.tgz",
    "fileCount": 28,
    "unpackedSize": 70204,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJf4nwoCRA9TVsSAnZWagAAwakP/iQrD1qe82YWbPesd6sH\n3lYFrjQ3amdKsPzaod77ZiC1VytIa4q4MgKtH0TTjJbF/fErxKBZJ+MGVgya\nd+pHfyOiVO9dByVxXtQxNoR1cRDiZrUgLsTZOvVOAjz0Vu/K5u+ygPozMOOo\n1/kVnB3zboJN24iipBwnEKUQp0k/1AV5VCQ18yIuoRePgj9mEuz7Mc3M1L+z\nStl60pBELg2hG0fqMgZHHcBvS/TOzibnNp0XscwTowuuZdlsU/zan+GpIUzs\nAw50BWMPywfEphsJYlcF/okc+kF2yzBMO0XXeUNIVVEzjpzEO4ZuDhEIFlT+\nExQmDSWxt6Cse2iKOocpwGqReJw1T0H+yPQI4iUPMHueY5WW8gT4C1r3NvdP\n9jiXg7kmCqBE0q2CvIX+KjXRW7L3/+04Dq8bi62rn5o+0OL7eoiNUtaePWhp\nGS2DxfpUeGyOEAHPjQkqJqBYw7lbWZzRHyNx3sRNMIKY7p+FfDb/rOZXkr1y\nG1Qe5xm2mh9TpM1PuIojt11KoLaZQJhrawNYscFbUSa3SDas5iniuq5B+41n\nfsNKaW6Gt2lCyodZ+kOljbey+4g1qhtSTdWFFSTKdrXSGe5ScbEtXCQg324W\nOKblHSL+bV4+uNbES7zoMmhswtETcKuM+IBeq7eV3AfrdRpL0Yx+z6SsuEz3\npL8X\r\n=L8PW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "7e543ed5540ce5995b30b1bb2a7b54367fd49d6f",
  "homepage": "https://github.com/apollographql/apollo-server#readme",
  "keywords": [
    "GraphQL",
    "Apollo",
    "Server",
    "Express",
    "Connect",
    "Javascript"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "apollo-bot",
      "email": "npm@apollographql.com"
    }
  ],
  "name": "apollo-server-express",
  "optionalDependencies": {},
  "peerDependencies": {
    "graphql": "^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0"
  },
  "readme": "[![npm version](https://badge.fury.io/js/apollo-server-express.svg)](https://badge.fury.io/js/apollo-server-express) [![Build Status](https://circleci.com/gh/apollographql/apollo-server/tree/main.svg?style=svg)](https://circleci.com/gh/apollographql/apollo-server) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/apollo)\n[![Read CHANGELOG](https://img.shields.io/badge/read-changelog-blue)](https://github.com/apollographql/apollo-server/blob/HEAD/CHANGELOG.md)\n\n\nThis is the Express and Connect integration of GraphQL Server. Apollo Server is a community-maintained open-source GraphQL server that works with many Node.js HTTP server frameworks. [Read the docs](https://www.apollographql.com/docs/apollo-server/). [Read the CHANGELOG.](https://github.com/apollographql/apollo-server/blob/main/CHANGELOG.md)\n\n```shell\nnpm install apollo-server-express\n```\n\n## Express\n\n```js\nconst express = require('express');\nconst { ApolloServer, gql } = require('apollo-server-express');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = express();\nserver.applyMiddleware({ app });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n## Connect\n\n> We recommend using `express` rather than `connect`.  However, if you wish to\n> use `connect`, please install [`connect`](https://www.npmjs.com/package/connect)\n> and [`qs-middleware`](https://www.npmjs.com/package/qs-middleware), in addition\n> to `apollo-server-express`.\n\n```shell\nnpm install --save connect qs-middleware apollo-server-express\n```\n\n```js\nconst connect = require('connect');\nconst { ApolloServer, gql } = require('apollo-server-express');\nconst query = require('qs-middleware');\n\n// Construct a schema, using GraphQL schema language\nconst typeDefs = gql`\n  type Query {\n    hello: String\n  }\n`;\n\n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => 'Hello world!',\n  },\n};\n\nconst server = new ApolloServer({ typeDefs, resolvers });\n\nconst app = connect();\nconst path = '/graphql';\n\napp.use(query());\nserver.applyMiddleware({ app, path });\n\napp.listen({ port: 4000 }, () =>\n  console.log(`ðŸš€ Server ready at http://localhost:4000${server.graphqlPath}`)\n);\n```\n\n> Note: `qs-middleware` is only required if running outside of Meteor\n\n## Principles\n\nGraphQL Server is built with the following principles in mind:\n\n* **By the community, for the community**: GraphQL Server's development is driven by the needs of developers\n* **Simplicity**: by keeping things simple, GraphQL Server is easier to use, easier to contribute to, and more secure\n* **Performance**: GraphQL Server is well-tested and production-ready - no modifications needed\n\nAnyone is welcome to contribute to GraphQL Server, just read [CONTRIBUTING.md](https://github.com/apollographql/apollo-server/blob/main/CONTRIBUTING.md), take a look at the [roadmap](https://github.com/apollographql/apollo-server/blob/main/ROADMAP.md) and make your first PR!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apollographql/apollo-server.git",
    "directory": "packages/apollo-server-express"
  },
  "types": "dist/index.d.ts",
  "version": "2.19.1"
}
